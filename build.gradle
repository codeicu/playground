buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// 所有模块/项目的通用配置
allprojects {
    group 'com.example'
    version '1.0-SNAPSHOT'
    apply plugin: 'idea'
}
// 子模块/项目的统一配置
subprojects {
    apply plugin: 'java'
    // 指定JDK版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // 指定编码格式
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
    ext {//依赖版本
        springBootVersion = "2.1.2.RELEASE"
        mysqlConnectorVersion = "8.0.13"
        mybatisStarterVersion = "1.3.2"
        fastjsonVersion = "1.2.54"
    }
    dependencies {
        compile("javax.servlet:javax.servlet-api:4.0.1")
        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

        implementation "org.springframework.boot:spring-boot-starter:$springBootVersion"
        // Log4j2
        compile("org.springframework.boot:spring-boot-starter-log4j2:$springBootVersion")
        // JSON
        compile("com.alibaba:fastjson:$fastjsonVersion")
        // Apache Commons
        compile("org.apache.commons:commons-lang3:3.8.1")
        // 单元测试
        testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
        testCompile("junit:junit:4.12")
        implementation 'cn.hutool:hutool-all:5.7.16'
    }
    configurations {
        //移除spring boot 默认logger依赖
        all*.exclude module: 'spring-boot-starter-logging'
    }
}